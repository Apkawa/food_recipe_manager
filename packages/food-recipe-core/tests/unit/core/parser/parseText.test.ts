import {parseTextRecipe} from '@app/core/parser/text';

describe('parseTextRecipe', () => {
  it('Empty recipe', () => {
    const t = ``;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [],
      name: '',
    });
  });
  it('Only text', () => {
    const t = `Foo
    Bar
    Baz`;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [],
      name: 'Foo',
    });
  });
  it('Parse portions', () => {
    const t = `Foo
    2 portions 
    4 onions`;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [
        {
          ingredients: [
            {
              name: 'onions',
              unit: 'pcs',
              value: 4,
            },
          ],
          name: '',
        },
      ],
      portion: 2,
      name: 'Foo',
    });
  });
  it('generic', () => {
    const t = `–Ø–π—Ü–æ –ø–µ—Ä–µ–ø–µ–ª–∏–Ω–æ–µ ‚Äì 6 —à—Ç.
–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ ‚Äì 150 –º–ª
–°–æ–ª—å - 0,5 —á.–ª.`;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [
        {
          ingredients: [
            {
              name: '–Ø–π—Ü–æ –ø–µ—Ä–µ–ø–µ–ª–∏–Ω–æ–µ',
              unit: 'pcs',
              value: 6,
            },
            {
              name: '–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ',
              unit: 'ml',
              value: 150,
            },
            {
              name: '–°–æ–ª—å',
              type: {
                density: 1030,
                name: 'kosher salt',
              },
              unit: 'tsp',
              value: 0.5,
            },
          ],
          name: '',
        },
      ],
      name: '',
    });
  });
  it('with name and groups', () => {
    const t = `
    –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–µ –¥–æ–ª—å–∫–∏ —Å —á–µ—Å–Ω–æ–∫–æ–º‚Å†‚Å†
    
–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 1 –∫–≥
üßÑ –ß–µ—Å–Ω–æ–∫ ‚Äì ¬Ω –≥–æ–ª–æ–≤–∫–∏
üå∂ –ö—Ä–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ü ‚Äì 1-2 —á–∞–π–Ω—ã–µ –ª–æ–∂–∫–∏
üßà –†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ ‚Äì 3 —Å—Ç–æ–ª–æ–≤—ã–µ –ª–æ–∂–∫–∏
`;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [
        {
          ingredients: [
            {
              name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å',
              unit: 'kg',
              value: 1,
            },
            {
              name: '–ß–µ—Å–Ω–æ–∫ ‚Äì –≥–æ–ª–æ–≤–∫–∏',
              unit: 'pcs',
              value: 0.5,
            },
            {
              name: '–ö—Ä–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ü',
              unit: 'tsp',
              value: [1, 2],
            },
            {
              name: '–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ',
              unit: 'tbsp',
              value: 3,
            },
          ],
          name: '–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã',
        },
      ],
      name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–µ –¥–æ–ª—å–∫–∏ —Å —á–µ—Å–Ω–æ–∫–æ–º',
    });
  });

  it('eda.ru example', () => {
    const t = `
    –ì–æ—Ä–æ—Ö
1 —Å—Ç–∞–∫–∞–Ω
–°–≤–µ–∂–∏–µ —à–∞–º–ø–∏–Ω—å–æ–Ω—ã
250 –≥
–ú–æ—Ä–∫–æ–≤—å
1 —à—Ç—É–∫–∞
–ß–µ—Å–Ω–æ–∫
2 –∑—É–±—á–∏–∫–∞
–°–æ–ª—å
–ø–æ –≤–∫—É—Å—É
`;
    expect(parseTextRecipe(t)).toStrictEqual({
      ingredient_groups: [
        {
          ingredients: [
            {
              name: '–ì–æ—Ä–æ—Ö',
              unit: 'cup',
              value: 1,
            },
            {
              name: '–°–≤–µ–∂–∏–µ —à–∞–º–ø–∏–Ω—å–æ–Ω—ã',
              unit: 'g',
              value: 250,
            },
            {
              name: '–ú–æ—Ä–∫–æ–≤—å',
              unit: 'pcs',
              value: 1,
            },
            {
              name: '–ß–µ—Å–Ω–æ–∫',
              unit: 'pcs',
              value: 2,
            },
            {
              name: '–°–æ–ª—å',
              unit: 'taste',
              type: {
                density: 1030,
                name: 'kosher salt',
              },
            },
          ],
          name: '',
        },
      ],
      name: '',
    });
  });
});
